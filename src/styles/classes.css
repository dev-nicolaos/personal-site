.flow > * + * {
	margin-block-start: calc(
		var(--flow-space-font-size, 1em) * var(--line-height-prose)
	);
}

.flow > :is(.break, .break + *) {
	--flow-space-font-size: var(--font-size-primary-heading);
}

.italic {
	font-style: italic;
}

.bold {
	font-weight: var(--font-weight-bold);
}

.inline-code,
.keys {
	background-color: var(
		--color-code-background,
		var(--color-raised-background)
	);
	border-radius: var(--border-radius-small);
	font-size: var(--font-size-small);
	padding: 2px;
}

.primary-heading {
	font-size: var(--font-size-primary-heading);
	font-weight: var(--font-weight-medium);
}

.secondary-heading {
	font-size: var(--font-size-secondary-heading);
}

.tertiary-heading {
	font-weight: var(--font-weight-bold);
}

.paragraph {
	line-height: var(--line-height-prose);
}

.blockquote {
	line-height: var(--line-height-prose);
	font-style: italic;
	inline-size: var(--width-prose-inset);
	margin-inline: auto;
}

.details {
	border: 2px dashed var(--color-accent);
	padding: var(--space-3) var(--space-2);
}

.details > summary {
	cursor: pointer;
	font-style: italic;
}

.details[open] > summary {
	margin-block-end: var(--space-2);
}

.link {
	/* Color all links */
	--color: var(--color-primary);
	color: var(--color);

	/* For outlines */
	border-radius: var(--border-radius-small);

	@media print {
		text-decoration: none;
		color: inherit;
	}
}

/* Regular (non-nav) links */
.link:not(.nav) {
	transition-property: box-shadow, color;
	transition-duration: 0.3s;
	/* Fallback for browsers that don't support lh unit. Requires unitless line heights */
	--largest-line-height: 2;
	/*
		This only works for inline links.
		Block/inline-block links (including flex/grid children) will break if they wrap onto a new line.
		Probably easiest to wrap the .link in a span, strong, or em when this is a concern.
		You could also add a modifier class doubling --shadow-height at screen/container sizes where it might wrap.
	*/
	--shadow-height: calc(var(--largest-line-height) * 1em);
}

@supports (width: 1lh) {
	.link:not(.nav) {
		--shadow-height: 1lh;
	}
}

.link:not(.nav):hover {
	color: var(--color-background);
	box-shadow: inset 0 calc(var(--shadow-height) * -1) var(--color);
	text-decoration-color: var(--color);
	text-decoration-skip-ink: none;
}

/* Nav Links */
.link.nav {
	text-decoration: none;
}

.link.nav[aria-current="page"] {
	color: var(--color-text);
}

.link.nav:where(:hover, [aria-current="page"]) {
	text-decoration: underline;
	/* Safari doesn't support the text-decoration shorthand yet */
	/* https://bugs.webkit.org/show_bug.cgi?id=230083 */
	text-decoration-color: var(--color);
	text-decoration-thickness: 2px;
	text-underline-offset: var(--space-1);
}

.list {
	padding-inline-start: 1em;
	line-height: var(--line-height-prose);
}

.list .list {
	padding-inline-start: 2ch;
}

.break {
	width: var(--width-prose-inset);
	height: 2px;
	background: var(--color-accent);
	border-radius: var(--border-radius-small);
	margin-inline: auto;
}

.astro-code {
	border-radius: var(--border-radius-small);
	padding: 0.5em;
}

.card {
	background-color: var(--color-raised-background);
	border-radius: var(--border-radius-large);
	padding: var(--space-2);
	--color-code-background: var(--color-background);
}

.visually-hidden {
	position: absolute;
	overflow: hidden;
	width: 1px;
	height: 1px;
	top: auto;
	left: -101vw;
	white-space: nowrap;
}

.form-label {
	font-weight: var(--font-weight-medium);
}

.form-item {
	background-color: var(--color-background);
	border-radius: var(--border-radius-small);
	/* Button/input/select elements don't inherit color */
	color: var(--color-text);
	cursor: pointer;
	padding: var(--space-0);
}

button.form-item {
	font-size: var(--font-size-small);
	font-weight: var(--font-weight-bold);
}

.date {
	font-weight: var(--font-weight-light);
}
